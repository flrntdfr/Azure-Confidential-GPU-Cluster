- name: Create remote_tmp directory
  ansible.builtin.file:
    path: /root/.ansible/tmp
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Download cGPU onboarding package
  ansible.builtin.get_url:
    url: "https://github.com/Azure/az-cgpu-onboarding/releases/download/{{ cgpu_version }}/cgpu-onboarding-package.tar.gz"
    dest: "/opt/cgpu-onboarding-package.tar.gz"
    mode: "0644"

- name: Create parent directory for cGPU package
  ansible.builtin.file:
    path: "/opt/cgpu-onboarding-package/{{ cgpu_version }}"
    state: directory
    mode: "0755"

- name: Extract cGPU onboarding package to parent directory
  ansible.builtin.unarchive:
    src: "/opt/cgpu-onboarding-package.tar.gz"
    dest: "/opt/cgpu-onboarding-package/{{ cgpu_version }}"
    remote_src: true
    extra_opts: "--strip-components=1"

# ----- BEGIN HACK -----

- name: Prevent unmanaged reboot by commenting the last line of step-0-prepare-kernel.sh
  ansible.builtin.shell: |
    sed -i '$ s/^/# /' "/opt/cgpu-onboarding-package/{{ cgpu_version }}/step-0-prepare-kernel.sh"

# ----- END HACK -----

- name: Prepare kernel (cGPU onboarding)
  ansible.builtin.command:
    cmd: "bash step-0-prepare-kernel.sh --enable-proposed"
    chdir: "/opt/cgpu-onboarding-package/{{ cgpu_version }}"
  args:
    creates: "/var/lib/cgpu/step_0.ok"
  register: step_0
  failed_when: step_0.rc != 0
  notify: Reboot

- name: Flush handlers to trigger reboot now
  meta: flush_handlers
  when: inventory_hostname in groups['tee_on']

- name: Install GPU driver (cGPU onboarding)
  ansible.builtin.command:
    cmd: "bash step-1-install-gpu-driver.sh"
    chdir: "/opt/cgpu-onboarding-package/{{ cgpu_version }}"
  args:
    creates: "/var/lib/cgpu/step_1.ok"
  register: step_1
  failed_when: step_1.rc != 0

- name: Perform GPU attestation (cGPU onboarding)
  ansible.builtin.command:
    cmd: "bash step-2-attestation.sh"
    chdir: "/opt/cgpu-onboarding-package/{{ cgpu_version }}"
  args:
    creates: "/var/lib/cgpu/step_2.ok"
  register: step_2
  failed_when: step_2.rc != 0

- name: Display log file contents
  ansible.builtin.shell: cat /opt/cgpu-onboarding-package/{{ cgpu_version }}/logs/all-operation.log
  register: log_contents

- name: Show log contents
  ansible.builtin.debug:
    var: log_contents.stdout_lines
